[1,["805t+N1L5I2pdNdlDQXlCM","82yAMnc7xO/565W4/BIRvP@f9941","e47wendi1LZY82wz6nqr1E@f9941","40k/gCAUpNrZgiItSJZJ+J","695tgyeHNDvoJ1wOyp0QrZ@f9941","41NSNnYqhNDa/yqJ6s8fAD","b0jlYhPnhLO5H1E8j2pC/a@f9941","30RdAKZ7NBOZiqYk9iPq/K@f9941","e0FKM5kclCmI5flgXBpADJ@f9941","84vQbf9AZPoIrgoc8tPOUh@f9941","b7srzihchJxp1z14VEfuRl"],["node","_spriteFrame","_font","_normalSprite","_effectAsset","root","unlockButton","cancelButton","closeButton","data","_customMaterial","_defaultClip"],[["cc.Sprite",["_sizeMode","_type","_isTrimmedMode","node","__prefab","_spriteFrame","_color","_customMaterial"],0,1,4,6,5,6],["cc.Node",["_name","_layer","_components","_prefab","_parent","_children","_lpos"],1,9,4,1,2,5],["cc.Label",["_string","_actualFontSize","_fontSize","_lineHeight","_overflow","_isSystemFontUsed","_enableWrapText","node","__prefab","_font","_color"],-4,1,4,6,5],["cc.Node",["_name","_layer","_parent","_components","_prefab","_lpos","_children"],1,1,12,4,5,2],["cc.UITransform",["node","__prefab","_contentSize"],3,1,4,5],["cc.Widget",["_alignFlags","_originalWidth","_originalHeight","node","__prefab"],0,1,4],["cc.Button",["_transition","node","__prefab","_target"],2,1,4,1],["cc.EffectAsset",["_name","combinations","shaders","techniques"],-1],["cc.TTFFont",["_name","_native"],1],["cc.Material",["_name","_states","_defines","_props"],0,12],["cc.Prefab",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["cc.UIOpacity",["node","__prefab"],3,1,4],["44c9a9FcKRMKrYdwWI6bdLU",["node","__prefab","closeButton","cancelButton","unlockButton"],3,1,4,1,1,1],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["54e86VTLA1PkJnzyR9Iyc5L",["useMaterialInstance","_rot","_width","_xOffset","node","__prefab"],-1,1,4],["cc.Animation",["playOnLoad","node","__prefab","_clips","_defaultClip"],2,1,4,3,6],["2177eXj3b1OXZtZ9KJ4p1oD",["node","__prefab"],3,1,4],["cc.BlockInputEvents",["node","__prefab"],3,1,4],["947c58+FIVJX54+TzRnW31x",["_resizeMode","_layoutType","_spacingX","node","__prefab"],0,1,4],["edf98QH2D1AUoCrtQlbxFrU",["key","node","__prefab"],2,1,4],["cc.Layout",["_resizeMode","_layoutType","_spacingX","node","__prefab"],0,1,4]],[[11,0,2],[14,0,1,2,3,4,5,5],[4,0,1,2,1],[1,0,1,4,2,3,6,3],[20,0,1,2,2],[1,0,1,4,2,3,3],[1,0,1,4,5,2,3,3],[1,0,1,4,5,2,3,6,3],[3,0,1,2,6,3,4,5,3],[0,3,4,5,1],[19,0,1,2,3,4,4],[2,0,1,2,3,4,5,7,8,9,7],[6,0,1,2,2],[7,0,1,2,3,5],[8,0,1,3],[9,0,1,2,3,4],[10,0,2],[1,0,1,5,2,3,3],[3,0,1,2,3,4,5,3],[4,0,1,1],[5,0,1,2,3,4,4],[5,0,3,4,2],[12,0,1,1],[13,0,1,2,3,4,1],[0,1,0,3,4,7,5,3],[0,0,3,4,6,5,2],[0,1,0,3,4,6,5,3],[0,1,0,3,4,5,3],[0,0,3,4,5,2],[0,0,2,3,4,5,3],[15,0,1,2,3,4,5,5],[16,0,1,2,3,4,2],[17,0,1,1],[18,0,1,1],[2,0,1,2,3,4,6,5,7,8,9,8],[2,0,1,2,3,4,5,7,8,10,9,7],[21,0,1,2,3,4,4],[6,0,1,2,3,2]],[[[[13,"LightFlush/withAnim/builtin-sprite-light-x",[{}],[{"hash":4187819091,"name":"LightFlush/withAnim/builtin-sprite-light-x|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Custom","stageFlags":16,"binding":1,"members":[{"name":"u_lrbt","type":16,"count":1},{"name":"u_uvs","type":16,"count":1},{"name":"u_ur","type":16,"count":1},{"name":"u_vr","type":16,"count":1},{"name":"u_arg0","type":16,"count":1}],"defines":[]},{"name":"LightBlend","stageFlags":16,"binding":2,"members":[{"name":"lightCol","type":16,"count":1}],"defines":["USE_LIGHT_BLEND"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Custom","stageFlags":16,"binding":1,"members":[{"name":"u_lrbt","type":16,"count":1},{"name":"u_uvs","type":16,"count":1},{"name":"u_ur","type":16,"count":1},{"name":"u_vr","type":16,"count":1},{"name":"u_arg0","type":16,"count":1}],"defines":[]},{"name":"LightBlend","stageFlags":16,"binding":2,"members":[{"name":"lightCol","type":16,"count":1}],"defines":["USE_LIGHT_BLEND"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_1","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_2","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_composite_pack_3","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183f\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"layout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_debug_view_mode;\n  mediump vec4 cc_debug_view_composite_pack_1;\n  mediump vec4 cc_debug_view_composite_pack_2;\n  mediump vec4 cc_debug_view_composite_pack_3;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 color;\nlayout(std140) uniform Custom {\n  vec4 u_lrbt;\n  vec4 u_uvs;\n  vec4 u_ur;\n  vec4 u_vr;\n  vec4 u_arg0;\n};\nfloat linear(float x0, float x1, float y0, float y1, float inputX) {\n    return (y1 - y0) * (inputX - x0) / (x1 - x0) + y0;\n}\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\n#if USE_LIGHT_BLEND\n  layout(std140) uniform LightBlend {\n    vec4 lightCol;\n  };\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  vec2 uvsc = vec2(uv0.x, uv0.y);\n  #if USE_PACKABLE_CONFRONT\n  uvsc.x = linear(u_lrbt[0], u_lrbt[1], 0.0, 1.0, uvsc.x);\n  uvsc.y = linear(u_lrbt[2], u_lrbt[3], 0.0, 1.0, uvsc.y);\n  #endif\n  #if USE_SLICED_CONFRONT\n  vec4 uvs = vec4(u_uvs[0], u_uvs[1], u_uvs[2], u_uvs[3]);\n  #if USE_PACKABLE_CONFRONT\n  uvs[0] = linear(u_lrbt[0], u_lrbt[1], 0.0, 1.0, uvs[0]);\n  uvs[1] = linear(u_lrbt[0], u_lrbt[1], 0.0, 1.0, uvs[1]);\n  uvs[2] = linear(u_lrbt[2], u_lrbt[3], 0.0, 1.0, uvs[2]);\n  uvs[3] = linear(u_lrbt[2], u_lrbt[3], 0.0, 1.0, uvs[3]);\n  #endif\n  vec4 un = vec4(0, uvs[0], uvs[1], 1.0);\n  vec4 vn = vec4(0, uvs[2], uvs[3], 1.0);\n  float rx = 0.0;\n  float ry = 0.0;\n  if (uvsc.x < uvs[0]) {\n    rx = linear(un[0], un[1], u_ur[0], u_ur[1], uvsc.x);\n  } else if (uvsc.x < uvs[1]) {\n    rx = linear(un[1], un[2], u_ur[1], u_ur[2], uvsc.x);\n  } else {\n    rx = linear(un[2], un[3], u_ur[2], u_ur[3], uvsc.x);\n  }\n  if (uvsc.y < uvs[2]) {\n    ry = linear(vn[0], vn[1], u_vr[0], u_vr[1], uvsc.y);\n  } else if (uvsc.y < uvs[3]) {\n    ry = linear(vn[1], vn[2], u_vr[1], u_vr[2], uvsc.y);\n  } else {\n    ry = linear(vn[2], vn[3], u_vr[2], u_vr[3], uvsc.y);\n  }\n  uvsc.x = rx / u_ur[3];\n  uvsc.y = ry / u_vr[3];\n  #endif\n  #if USE_LIGHT_BLEND\n    uvsc.x = uvsc.x + u_arg0.b;\n    float t = u_arg0.y;\n    mat2 rot = mat2(cos(t), -sin(t), sin(t), cos(t));\n    vec2 uv2 = uvsc * rot;\n    float rate = step(uv2.x, uv2.y);\n    rate += step(uv2.x, uv2.y);\n    rate += step(uv2.x + u_arg0.x * 1.5, uv2.y);\n    rate += step(uv2.x + u_arg0.x * 2.5, uv2.y);\n    float fin = mod(rate, 2.0);\n    vec4 l = vec4(1, 1, 1, 1);\n    l = mix(l, vec4(0.0, 0.0, 0.0, 1.0), 1.0 - fin);\n    vec3 lc = mix(o.rgb, lightCol.rgb, lightCol.a);\n    o = mix(o, vec4(lc.rgb, o.a), l.r * smoothstep(0.0, 1.0, o.g));\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183f\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON)\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"precision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 color;\n   uniform vec4 u_lrbt;\n   uniform vec4 u_uvs;\n   uniform vec4 u_ur;\n   uniform vec4 u_vr;\n   uniform vec4 u_arg0;\nfloat linear(float x0, float x1, float y0, float y1, float inputX) {\n    return (y1 - y0) * (inputX - x0) / (x1 - x0) + y0;\n}\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\n#if USE_LIGHT_BLEND\n      uniform vec4 lightCol;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  vec2 uvsc = vec2(uv0.x, uv0.y);\n  #if USE_PACKABLE_CONFRONT\n  uvsc.x = linear(u_lrbt[0], u_lrbt[1], 0.0, 1.0, uvsc.x);\n  uvsc.y = linear(u_lrbt[2], u_lrbt[3], 0.0, 1.0, uvsc.y);\n  #endif\n  #if USE_SLICED_CONFRONT\n  vec4 uvs = vec4(u_uvs[0], u_uvs[1], u_uvs[2], u_uvs[3]);\n  #if USE_PACKABLE_CONFRONT\n  uvs[0] = linear(u_lrbt[0], u_lrbt[1], 0.0, 1.0, uvs[0]);\n  uvs[1] = linear(u_lrbt[0], u_lrbt[1], 0.0, 1.0, uvs[1]);\n  uvs[2] = linear(u_lrbt[2], u_lrbt[3], 0.0, 1.0, uvs[2]);\n  uvs[3] = linear(u_lrbt[2], u_lrbt[3], 0.0, 1.0, uvs[3]);\n  #endif\n  vec4 un = vec4(0, uvs[0], uvs[1], 1.0);\n  vec4 vn = vec4(0, uvs[2], uvs[3], 1.0);\n  float rx = 0.0;\n  float ry = 0.0;\n  if (uvsc.x < uvs[0]) {\n    rx = linear(un[0], un[1], u_ur[0], u_ur[1], uvsc.x);\n  } else if (uvsc.x < uvs[1]) {\n    rx = linear(un[1], un[2], u_ur[1], u_ur[2], uvsc.x);\n  } else {\n    rx = linear(un[2], un[3], u_ur[2], u_ur[3], uvsc.x);\n  }\n  if (uvsc.y < uvs[2]) {\n    ry = linear(vn[0], vn[1], u_vr[0], u_vr[1], uvsc.y);\n  } else if (uvsc.y < uvs[3]) {\n    ry = linear(vn[1], vn[2], u_vr[1], u_vr[2], uvsc.y);\n  } else {\n    ry = linear(vn[2], vn[3], u_vr[2], u_vr[3], uvsc.y);\n  }\n  uvsc.x = rx / u_ur[3];\n  uvsc.y = ry / u_vr[3];\n  #endif\n  #if USE_LIGHT_BLEND\n    uvsc.x = uvsc.x + u_arg0.b;\n    float t = u_arg0.y;\n    mat2 rot = mat2(cos(t), -sin(t), sin(t), cos(t));\n    vec2 uv2 = uvsc * rot;\n    float rate = step(uv2.x, uv2.y);\n    rate += step(uv2.x, uv2.y);\n    rate += step(uv2.x + u_arg0.x * 1.5, uv2.y);\n    rate += step(uv2.x + u_arg0.x * 2.5, uv2.y);\n    float fin = mod(rate, 2.0);\n    vec4 l = vec4(1, 1, 1, 1);\n    l = mix(l, vec4(0.0, 0.0, 0.0, 1.0), 1.0 - fin);\n    vec3 lc = mix(o.rgb, lightCol.rgb, lightCol.a);\n    o = mix(o, vec4(lc.rgb, o.a), l.r * smoothstep(0.0, 1.0, o.g));\n  #endif\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":54,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":51}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"},{"name":"USE_LIGHT_BLEND","type":"boolean"},{"name":"IS_GRAY","type":"boolean"},{"name":"USE_PACKABLE_CONFRONT","type":"boolean"},{"name":"USE_SLICED_CONFRONT","type":"boolean"}]}],[{"passes":[{"program":"LightFlush/withAnim/builtin-sprite-light-x|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"lightColor":{"linear":true,"type":16,"value":[0,0,0,1],"handleInfo":["lightCol",0,16]},"lrbt":{"type":16,"value":[0,1,0,1],"handleInfo":["u_lrbt",0,16]},"uvs":{"type":16,"value":[0,1,0,1],"handleInfo":["u_uvs",0,16]},"ur":{"type":16,"value":[0,1,0,1],"handleInfo":["u_ur",0,16]},"vr":{"type":16,"value":[0,1,0,1],"handleInfo":["u_vr",0,16]},"arg0":{"type":16,"value":[1,0.1,0,0],"handleInfo":["u_arg0",0,16]},"lightCol":{"type":16,"value":[0,0,0,1]},"u_lrbt":{"type":16,"value":[0,1,0,1]},"u_uvs":{"type":16,"value":[0,1,0,1]},"u_ur":{"type":16,"value":[0,1,0,1]},"u_vr":{"type":16,"value":[0,1,0,1]},"u_arg0":{"type":16,"value":[1,0.1,0,0]}}}]}]]],0,0,[],[],[]],[[[14,"puhuiti","puhuiti.ttf"],-1],0,0,[],[],[]],[[[15,"light-x-001",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true,"USE_LIGHT_BLEND":true,"USE_PACKABLE_CONFRONT":true,"USE_SLICED_CONFRONT":true}],[[[{},"lightColor",8,[4,4294967295]]],11]]],0,0,[0],[4],[5]],[[[16,"BuildingUnlockPanel"],[17,"BuildingUnlockPanel",33554432,[-9,-10],[[2,-2,[0,"6fSzsI7bNC3a8brmz0Xnro"],[5,1080,2160]],[20,45,100,100,-3,[0,"a1ERIBptJL1LcIhM5wQs1C"]],[22,-4,[0,"28k9pIMChNCZhAXWF5dlyr"]],[23,-8,[0,"c5EIEnngdAQKnK6Buav6M0"],-7,-6,-5]],[1,"a5Xvv++8BAjY/l++Jv+H/X",null,null,null,-1,0]],[7,"main",33554432,1,[-12,-13,-14,-15,-16,-17,-18],[[19,-11,[0,"afj/WFVS1I85kK9j27qQ27"]]],[1,"810cQmtGpKvqbgY7V8SXnn",null,null,null,1,0],[1,0,-67.773,0]],[8,"unlockButton",33554432,2,[-24],[[[2,-19,[0,"1cY6Vc0MNDL5eq6Ck2lz9k"],[5,340,180]],[24,1,0,-20,[0,"400XROqlRMHoqOTZCInj+U"],7,8],-21,[30,true,-0.85,0.36,-0.38,-22,[0,"eetoHIdmBD1oxdh9qHZ/Of"]],[31,true,-23,[0,"bflS6XQytNB7L0Fk1Z6Nwb"],[9],10]],4,4,1,4,4],[1,"4e4CuaQWlDQZGdweoyD8MR",null,null,null,1,0],[1,196,-374,0]],[5,"bg",33554432,1,[[2,-25,[0,"53cLn4dY1Bs7AsAYGSg7qO"],[5,1080,2160]],[32,-26,[0,"4daRQFh0NDTZR9L38Sw+iu"]],[33,-27,[0,"b20SHQK4tJSKZQJOp0G2oC"]],[25,0,-28,[0,"d06Oh84sZLh59+Xel8Vpjr"],[4,2130706432],0]],[1,"7ed5vlLPZEAZ70eC41jwkY",null,null,null,1,0]],[6,"main",33554432,3,[-31,-32],[[2,-29,[0,"f4aS4d3KFF3JNrh6VAo4WT"],[5,256.6,100]],[10,1,1,20,-30,[0,"8ccwQlFpVBQrShNcDD0cAw"]]],[1,"7bnxDvjY5P34fOT0anWb/f",null,null,null,1,0]],[8,"cancelButton",33554432,2,[-36],[[[2,-33,[0,"428JJ1/XxGLZFymDOsjh5n"],[5,340,180]],[26,1,0,-34,[0,"e6lGTdSIFJHpmTrGCNKyLj"],[4,4294538566],12],-35],4,4,1],[1,"edkCQXDI5G3Z/TritGz9uJ",null,null,null,1,0],[1,-196,-374,0]],[6,"board",33554432,2,[-39],[[2,-37,[0,"804cEZxjhMS7j3/tm0p6iy"],[5,850,1050]],[27,1,0,-38,[0,"c1FCKuLTxFYrukdeJw7qPj"],2]],[1,"78/3ZwtQFD3rRqErxuBO7R",null,null,null,1,0]],[3,"title_di",33554432,7,[[2,-40,[0,"4fg/d99GtB6qs3tHH8ORBP"],[5,850,186]],[28,0,-41,[0,"3a7YOvUr9BU4jgaeLytf32"],1],[21,1,-42,[0,"f257RqT6lK44L+tlo1CDIG"]]],[1,"75IFTu4GJOx6uPhrZKjKaO",null,null,null,1,0],[1,0,432,0]],[3,"title",33554432,2,[[2,-43,[0,"2caSRnQehA8o4kHMXoYQk/"],[5,609.4,126]],[11,"Facility Unlock",84,100,100,2,false,-44,[0,"54Z9gnn6BBLrWE6bwo3uPv"],3],[4,"bup.title",-45,[0,"c2cUQiJF5E7bxkJpzr92Z/"]]],[1,"36IbdpVEBENr8MmJTOLb6J",null,null,null,1,0],[1,0,431.519,0]],[3,"label",33554432,5,[[2,-46,[0,"44EzL5ywJHkbFVA2J7MtiY"],[5,138.6,88.2]],[34,"Unlock",40,70,70,2,false,false,-47,[0,"a0MmiH1ONAn7s7CLz1fOHg"],6],[4,"bup.unlock",-48,[0,"a1891mO4lNgqOdH2VRXf8J"]]],[1,"13gzQNLslGUIzKeY3CS9hH",null,null,null,1,0],[1,58.999999999999986,0,0]],[6,"main",33554432,6,[-51],[[2,-49,[0,"e3QR4g+jNL8LHS1agHuNa0"],[5,237.6,100]],[10,1,1,20,-50,[0,"87VosIX8pABZQi4G8EUFeK"]]],[1,"40G9Lu49tLgJ9zsuuQ9YlL",null,null,null,1,0]],[5,"label",33554432,11,[[2,-52,[0,"ecjS3FrnBGC53fFcPxnRxh"],[5,237.6,75.6]],[11,"Next Time",47,60,60,2,false,-53,[0,"a2FPd1gDVGP7oVLABXxAaP"],11],[4,"bup.nexttime",-54,[0,"d3Aw01m6hE96wekFj/rjkJ"]]],[1,"f0S9Saf0tJroAMIV665eZk",null,null,null,1,0]],[18,"closeButton",33554432,2,[[[2,-55,[0,"76fPB42hZGUYYsu5x5rSox"],[5,80,80]],[29,0,false,-56,[0,"6fjMlmmbdIGKnYGMO9Trnn"],13],-57],4,4,1],[1,"7buGuKHLBI+qvmWpmNOHlz",null,null,null,1,0],[1,349.819,449.076,0]],[7,"layout",33554432,2,[-60],[[2,-58,[0,"9fAEEtOs9O/6YZKS31dUQO"],[5,764.45,100]],[36,1,1,50,-59,[0,"d3Ut/OtNZLNbLHYyBtlpW2"]]],[1,"8e01eYBZtCELLLpDLPoi3A",null,null,null,1,0],[1,0,-213.091,0]],[5,"tipLabel",33554432,14,[[2,-61,[0,"73Jn5b0W1OpJqHxzfFLQpS"],[5,764.45,63]],[35,"Unlock the facility now for free",50,50,50,2,false,-62,[0,"f5j4+0Vb5LtKchjmKde72Z"],[4,4294473286],14],[4,"bup.tip",-63,[0,"d9HT7agqJBkohHerOmlzWu"]]],[1,"a39Ta7XOJK07YH3SKCRHzI",null,null,null,1,0]],[3,"sheshi",33554432,2,[[2,-64,[0,"4bBhO7QsRHaaShq9Ke5Oib"],[5,347,280]],[9,-65,[0,"dd+BLg2WdBZ462d7XEc+eE"],4]],[1,"ad7aLnM7pAqJcU5ezkkjqp",null,null,null,1,0],[1,0,75.035,0]],[3,"camera",33554432,5,[[2,-66,[0,"15Uy6gHDZDT7irt6Tl31Lq"],[5,98,73]],[9,-67,[0,"efXht8mtpGpofkcf35cY6V"],5]],[1,"aeztu4bTZBiau1krdD9W7Y",null,null,null,1,0],[1,-79.30000000000001,0,0]],[37,3,3,[0,"a4pCpEqSdGYL928LOFROnx"],3],[12,3,6,[0,"84lR/5IctM0p5Qk5j6rLdj"]],[12,3,13,[0,"a2NLIbyxlG6o8LhamxFjMl"]]],0,[0,5,1,0,0,1,0,0,1,0,0,1,0,6,18,0,7,19,0,8,20,0,0,1,0,-1,4,0,-2,2,0,0,2,0,-1,7,0,-2,9,0,-3,16,0,-4,3,0,-5,6,0,-6,13,0,-7,14,0,0,3,0,0,3,0,-3,18,0,0,3,0,0,3,0,-1,5,0,0,4,0,0,4,0,0,4,0,0,4,0,0,5,0,0,5,0,-1,17,0,-2,10,0,0,6,0,0,6,0,-3,19,0,-1,11,0,0,7,0,0,7,0,-1,8,0,0,8,0,0,8,0,0,8,0,0,9,0,0,9,0,0,9,0,0,10,0,0,10,0,0,10,0,0,11,0,0,11,0,-1,12,0,0,12,0,0,12,0,0,12,0,0,13,0,0,13,0,-3,20,0,0,14,0,0,14,0,-1,15,0,0,15,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,0,17,0,9,1,67],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,19,20],[1,1,1,2,1,1,2,10,1,-1,11,2,1,1,2,3,3,3],[6,7,1,0,8,9,0,10,2,3,3,0,1,4,0,2,1,4]]]]
